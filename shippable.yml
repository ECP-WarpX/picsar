build:

  pre_ci_boot:
    image_name: lf88/picsar_test
    image_tag: latest
    pull: true

  ci:
    #QED LIBRARY
    #Install dependencies
    #- sudo apt-get update && sudo apt-get install -y libboost-math-dev libboost-test-dev cmake3
    #- cmake --version
    #- cd ..
    #- git clone https://github.com/kokkos/kokkos
    #- cd kokkos
    #- kokkos_dir=$(pwd)
    #- cd ../picsar
    #- cd src/multi_physics
    #- mkdir build
    #- cd build
    #The following instruction is not required on my pc:
    #First test without Kokkos support
    #- export BOOST_LIBRARYDIR=/usr/lib/x86_64-linux-gnu/
    #- cmake ../. -DWITH_KOKKOS=OFF
    #- make
    #- make test
    #Second test with Kokkos support
    #- cmake ../. -DWITH_KOKKOS=ON -DKOKKOS_DIRECTORY=${kokkos_dir} -DKOKKOS_ENABLE_OPENMP=ON
    #- make
    #- make test
    #- cd ../../..
    #-----------

    # Install dependencies
    #- pip install matplotlib pytest
    # Install FFTW3
    #- sudo apt-get update && sudo apt-get install -y libfftw3-dev libfftw3-mpi-dev

    # Change user and prepare environment
    - adduser hal
    - su hal
    - cd /home/hal
    - scl enable rh-python36 bash
    - source mypy/bin/activate

    # Get the latest version of warp & compile
    - cd /home/hal/warp/pywarp90 && git pull && make install && make pinstall

    - cd /home/hal/picsar && git pull

    # Compile the unit tests
    - make build_test
    # Run tests on particle routines
    - make test_gcov
    # Compile Picsar with fftw
    - make clean
    - sed -i 's/MODE=prod/MODE=prod_spectral/g' Makefile
    - make

    #fix issue with MPI tasks number > number of cores
    - sed -i 's/mpirun -np/mpirun -host 127.0.0.1:8 -np/g' Makefile

    # Compile Picsar with fftw
    - make clean
    - sed -i 's/MODE=prod/MODE=prod_spectral/g' Makefile
    - make
    # Compile and run tests on Maxwell solver (plane wave test)
    - make clean
    - make build_test_spectral_3d
    - make test_maxwell_solver_3d
    - make clean
    - make build_test_spectral_2d
    - make test_maxwell_solver_2d
    # Compile Picsar as library
    - make clean
    - sed -i 's/MODE=prod_spectral/MODE=library/g' Makefile
    - make lib
    # Add Picsar Dynamic library to LD_LIBRARY_PATH
    - export LD_LIBRARY_PATH=/path_to_libpxr.iso:$LD_LIBRARY_PATH
    # Compile the Fortran kernel of Picsar
    - sed -i 's/MODE=library/MODE=prod/g' Makefile
    - make clean
    - make
    # Add path to pythonpath
    - export PYTHONPATH="/home/hal/picsar/utils/postprocessing:$PYTHONPATH"
    # Run the tests for Picsar Fortran
    - cd Acceptance_testing/Fortran_tests/test_plasma_drift
    - py.test -s --ttest=1 --trun=1 --tshow=0
    - cd ../test_homogeneous_plasma
    - py.test -s --ttest=1 --trun=1 --tshow=0
    # this last test is very slow on docker and shippable for an unknown reason
    - cd ../test_Langmuir_wave
    - py.test -s --ttest=1 --trun=1 --tshow=0
    # Compile Picsar for Python
    - cd ../../..
    - python configure
    - make -f Makefile_Forthon
    - cd python_module && python setup.py install && cd ../
    # Run tests for python
    - cd Acceptance_testing/Python_tests/test_Langmuir_wave
    - cp -p ../../../examples/example_scripts_python/test_Langmuir_wave_3d.py .
    - export OMP_NUM_THREADS=2
    - python test_Langmuir_wave_3d.py
    - cd ../test_radiation_reaction
    - py.test
